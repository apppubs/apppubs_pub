/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */


dependencies{
    // https://mvnrepository.com/artifact/com.alibaba/fastjson
  
}

task resolveSource<<{
    def jsonFile = file('input/config.json')
    def parsedJson = new groovy.json.JsonSlurper().parseText(jsonFile.text)
    println parsedJson
    
    def mportalBuildFile = file('apppubs-android/mportal/build.gradle')
    def buildFileText = mportalBuildFile.text
    
    String lastPackage =  buildFileText.find(/applicationId "[^"]*"/).replace('applicationId','').replaceAll('"',"").trim()
    println "更换包名$lastPackage->$parsedJson.packageName"

    ant.replaceregexp(match: lastPackage, replace: "$parsedJson.packageName", flags: 'g', byline: true) {
        fileset(dir: 'apppubs-android')
    }

    println parsedJson.appName
    ant.replaceregexp(match:'\"app_name\"[\\s\\S]*',replace:"\"app_name\",\"$parsedJson.appName\"",flags:'g',byline:true){
        fileset(file:'apppubs-android/mportal/build.gradle')
    }
    println parsedJson.wxAppId
   
    ant.replaceregexp(match:'"WX_APPID", [\\s\\S]*',replace:/\"WX_APPID\", \"\\\\"$parsedJson.wxAppId\\\\"\" /,flags:'g',byline:true){
        fileset(file:'apppubs-android/mportal/build.gradle')
    }

    println parsedJson.appId
    ant.replaceregexp(match:'APPID[\\s]*:[\\s\\S]*',replace:/APPID:\"$parsedJson.appId\",/,flags:'g',byline:true){
        fileset(file:'apppubs-android/mportal/build.gradle')
    }

    println parsedJson.baseURL
    ant.replaceregexp(match:'BASE_URL[\\s]*:[\\s\\S]*',replace:/BASE_URL:\"$parsedJson.baseURL\",/,flags:'g',byline:true){
        fileset(file:'apppubs-android/mportal/build.gradle')
    }

    println parsedJson.jpushAppKey
    ant.replaceregexp(match:'JPUSH_APPKEY[\\s]*:[\\s\\S]*',replace:/JPUSH_APPKEY:\"$parsedJson.jpushAppKey\",/,flags:'g',byline:true){
        fileset(file:'apppubs-android/mportal/build.gradle')
    }

    println parsedJson.versionName
    ant.replaceregexp(match:'versionName[\\s]"[\\s\\S]*',replace:/versionName \"$parsedJson.versionName\"/,flags:'g',byline:true){
        fileset(file:'apppubs-android/mportal/build.gradle')
    }

    println parsedJson.versionCode
    ant.replaceregexp(match:'versionCode[\\s\\S]*',replace:/versionCode $parsedJson.versionCode/,flags:'g',byline:true){
        fileset(file:'apppubs-android/mportal/build.gradle')
    }
    copy {
        println "拷贝xxxhdpi"
        from file('input/icon/xxxhdpi/icon.png')
        into file('apppubs-android/mportal/src/main/res/drawable-xxxhdpi/')
    }
    copy {
        println "拷贝xxhdpi"
        from file('input/icon/xxhdpi/icon.png')
        into file('apppubs-android/mportal/src/main/res/drawable-xxhdpi/')
    }
    copy {
        println "拷贝xhdpi"
        from file('input/icon/xhdpi/icon.png')
        into file('apppubs-android/mportal/src/main/res/drawable-xhdpi/')
    }
    copy {
        println "拷贝hdpi"
        from file('input/icon/hdpi/icon.png')
        into file('apppubs-android/mportal/src/main/res/drawable-hdpi/')
    }
    copy {
        println "拷贝mdpi"
        from file('input/icon/mdpi/icon.png')
        into file('apppubs-android/mportal/src/main/res/drawable-mdpi/')
    }
    copy {
        println "拷贝ldpi"
        from file('input/icon/ldpi/icon.png')
        into file('apppubs-android/mportal/src/main/res/drawable-ldpi/')
    }

    delete 'apppubs-android/mportal/src/main/assets/welcome'

    copy{
        println "拷贝welcome"
        from file('input/welcome')
        into file('apppubs-android/mportal/src/main/assets/welcome')
    }

    /*
        处理证书
        release.keystore证书文件不存在时使用默认证书
    */
    def keyStoreFileName = "release.keystore";
    def keystoreFile = file("input/$keyStoreFileName")
    if (keystoreFile.exists()) {
        println("keystore存在")
        println "拷贝证书文件"
        copy{
            from keystoreFile
            into file('apppubs-android/mportal')
        }
        changeSignConfig(keyStoreFileName,parsedJson.storePassword,parsedJson.keyAlias,parsedJson.keyPassword)
    }else{
        //恢复默认签名
        changeSignConfig("hezheng.keystore","hezheng","hezheng","hezheng")
    }

}

void changeSignConfig(String keystore, String storePassword, String keyAlias, String keyPassword){
    ant.replaceregexp(match:'storeFile[\\s]*file([\\s\\S]*)',replace:/storeFile file(\"$keystore\")/,flags:'g',byline:true){
        fileset(file:'apppubs-android/mportal/build.gradle')
    }
    ant.replaceregexp(match:'storePassword[\\s\\S]*',replace:/storePassword \"$storePassword\"/,flags:'g',byline:true){
        fileset(file:'apppubs-android/mportal/build.gradle')
    }
    ant.replaceregexp(match:'keyAlias[\\s\\S]*',replace:/keyAlias \"$keyAlias\"/,flags:'g',byline:true){
        fileset(file:'apppubs-android/mportal/build.gradle')
    }
    ant.replaceregexp(match:'keyPassword[\\s\\S]*',replace:/keyPassword \"$keyPassword\"/,flags:'g',byline:true){
        fileset(file:'apppubs-android/mportal/build.gradle')
    }
}

